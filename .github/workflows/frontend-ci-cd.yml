name: Frontend CI/CD

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

on:
  push:
    branches:
      - master
    paths:
      - 'frontend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # Step 3: Build and Push Docker Image
      - name: Build and Push Docker Image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/mood-tracker-app/frontend:${IMAGE_TAG}
          docker build -t $IMAGE_URI -f frontend/Dockerfile frontend
          docker push $IMAGE_URI
          echo "IMAGE_URI=${IMAGE_URI}" >> $GITHUB_ENV
      
      # Step 4: Download current task definition
      - name: Download current ECS task definition
        id: task-def
        run: |
          aws ecs describe-task-definition \
            --task-definition frontend-task \
            --query 'taskDefinition' \
            > task-definition.json

      # Step 5: Update image URI in task definition
      - name: Update image URI in task definition
        run: |
          IMAGE_URI=${{ env.IMAGE_URI }}
          cat task-definition.json | \
          jq '.containerDefinitions[0].image = env.IMAGE_URI' \
          > new-task-definition.json

      # Step 6: Register new revision
      - name: Register new ECS task definition revision
        run: |
          aws ecs register-task-definition \
            --cli-input-json file://new-task-definition.json

      # Step 7: Force ECS to use new revision
      - name: Update ECS service to use new revision
        run: |
          aws ecs update-service \
            --cluster mood-tracker-cluster \
            --service frontend-task-service \
            --task-definition frontend-task \
            --force-new-deployment